{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 10,
    "pipelineId" : "ManualGCCoreReparse4a41817d-5a9f-46a4-9298-6bd4bd98e253",
    "title" : "[Manual] GC Core Re-Parse",
    "description" : "",
    "uuid" : "0aac9627-ac79-47bb-a38d-0ac36dadfd80",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_MOST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : false
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.85}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "STOP_PIPELINE"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ {
        "key" : "",
        "value" : ""
      } ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "INFO"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 1
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 30000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "DevDataGenerator_01",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_RandomDataGeneratorSource",
      "stageVersion" : "5",
      "configuration" : [ {
        "name" : "dataGenConfigs",
        "value" : [ {
          "type" : "STRING",
          "precision" : 10,
          "scale" : 2,
          "field" : "dummy"
        } ]
      }, {
        "name" : "rootFieldType",
        "value" : "MAP"
      }, {
        "name" : "headerAttributes",
        "value" : [ ]
      }, {
        "name" : "delay",
        "value" : "${1000 * 60 * 60 * 24 * 8}"
      }, {
        "name" : "batchSize",
        "value" : 1
      }, {
        "name" : "numThreads",
        "value" : 1
      }, {
        "name" : "eventName",
        "value" : "generated-event"
      }, {
        "name" : "stageOnRecordError",
        "value" : "STOP_PIPELINE"
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Faux Clock Source",
        "xPos" : 114,
        "yPos" : 129,
        "stageType" : "SOURCE"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "DevDataGenerator_01OutputLane15960123060590" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Shell_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_executor_shell_ShellDExecutor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.environmentVariables",
        "value" : [ {
          "key" : "SCRIPT_ENV",
          "value" : "prod"
        }, {
          "key" : "REPO_TGZ_FILENAME",
          "value" : "gamechanger-repo.dev.20210219.tgz"
        }, {
          "key" : "REPO_TGZ_BASE_PREFIX",
          "value" : "gamechanger/data-pipelines/orchestration/repo/"
        }, {
          "key" : "ES_INDEX_NAME",
          "value" : "gamechanger_20210122"
        }, {
          "key" : "ES_ALIAS_NAME",
          "value" : ""
        }, {
          "key" : "MAX_OCR_THREADS_PER_FILE",
          "value" : "2"
        }, {
          "key" : "MAX_PARSER_THREADS",
          "value" : "16"
        }, {
          "key" : "S3_BUCKET_NAME",
          "value" : "advana-data-zone"
        }, {
          "key" : "SKIP_NEO4J_UPDATE",
          "value" : "no"
        }, {
          "key" : "SKIP_SNAPSHOT_BACKUP",
          "value" : "yes"
        }, {
          "key" : "SKIP_DB_BACKUP",
          "value" : "no"
        }, {
          "key" : "SKIP_DB_UPDATE",
          "value" : "no"
        }, {
          "key" : "JOB_NAME",
          "value" : "core-reparse"
        }, {
          "key" : "APP_CONFIG_NAME",
          "value" : "prod"
        }, {
          "key" : "ES_CONFIG_NAME",
          "value" : "prod-sans-analyzers"
        } ]
      }, {
        "name" : "config.timeout",
        "value" : "${1000 * 60 * 60 * 24 * 7}"
      }, {
        "name" : "config.script",
        "value" : "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\n# always set in stage params\nSCRIPT_ENV=${SCRIPT_ENV:-local}\n\n# Check basic params\ncase \"$SCRIPT_ENV\" in\nprod)\n  echo \"RUNNING IN PROD ENV\"\n  ;;\ndev)\n  echo \"RUNNING IN DEV ENV\"\n  ;;\nlocal)\n  echo \"RUNNING IN LOCAL ENV\"\n  ;;\n*)\n  echo >&2 \"Must set SCRIPT_ENV = (prod|dev|local)\"\n  exit 2\n  ;;\nesac\n\n#####\n## ## SETUP TMP DIR\n#####\n\nfunction setup_tmp_dir() {\n  LOCAL_TMP_DIR=$(mktemp -d)\n}\nsetup_tmp_dir # CALLING RIGHT AWAY (to avoid issues with unbound var later)\n\nfunction echo_tmp_dir_locaton() {\n  echo \"TEMP DIR IS AT $LOCAL_TMP_DIR\"\n}\n\nfunction remove_tmp_dir() {\n  if [[ -d \"$LOCAL_TMP_DIR\" ]]; then\n    rm -r \"$LOCAL_TMP_DIR\"\n  fi\n}\n\n#####\n## ## REGISTER CLEANUP HOOKS\n#####\n\nfunction cleanup_hooks() {\n  remove_tmp_dir\n  # echo_tmp_dir_locaton\n}\ntrap cleanup_hooks EXIT\n\n#####\n## ## SETUP COMMANDS\n#####\n\nfunction setup_venv_and_other_commands() {\n\n  source \"/opt/gc-venv/bin/activate\"\n  export PATH=\"$PATH:/usr/local/bin\"\n\n  case \"$SCRIPT_ENV\" in\n  prod)\n    export AWS_DEFAULT_REGION=\"us-gov-west-1\"\n    AWS_CMD=\"aws\"\n    ;;\n  dev)\n    export AWS_DEFAULT_REGION=\"us-east-1\"\n    AWS_CMD=\"aws\"\n    ;;\n  local)\n    export AWS_DEFAULT_REGION=\"us-east-1\"\n    AWS_CMD=\"aws --endpoint-url http://s3-server:9000\"\n    ;;\n  *)\n    echo >&2 \"Must set SCRIPT_ENV = (prod|dev|local)\"\n    exit 2\n    ;;\n  esac\n\n}\n\nfunction setup_local_repo_copy() {\n  echo \"FETCHING REPO\"\n  S3_REPO_TGZ_PATH=\"${S3_BUCKET_NAME}/${REPO_TGZ_BASE_PREFIX}${REPO_TGZ_FILENAME}\"\n\n  $AWS_CMD s3 cp \"s3://${S3_REPO_TGZ_PATH}\" \"$LOCAL_GC_REPO_TGZ_PATH\"\n  tar -xvzf \"$LOCAL_GC_REPO_TGZ_PATH\" -C \"$LOCAL_GC_REPO_BASE_DIR\"\n}\n\nfunction setup_local_vars_and_dirs() {\n\n  LOCAL_JOB_DIR=\"$LOCAL_TMP_DIR/job\"\n  LOCAL_GC_REPO_BASE_DIR=\"$LOCAL_TMP_DIR/app-repo\"\n  LOCAL_GC_REPO_TGZ_PATH=\"$LOCAL_GC_REPO_BASE_DIR/repo.tgz\"\n\n  mkdir -p \"$LOCAL_JOB_DIR\"\n  mkdir -p \"$LOCAL_GC_REPO_BASE_DIR\"\n\n  # setup logs\n  JOB_TS=$(sed 's/.\\{5\\}$//' <<< $(date --iso-8601=seconds))\n  S3_JOB_LOG_PREFIX=\"gamechanger/data-pipelines/orchestration/logs/${JOB_NAME}/${JOB_TS}/\"\n  LOCAL_JOB_LOG_PATH=\"$LOCAL_TMP_DIR/job.log\"\n  touch \"$LOCAL_JOB_LOG_PATH\"\n\n  # setup pythonpath & cwd\n  export PYTHONPATH=\"$LOCAL_GC_REPO_BASE_DIR\"\n  cd \"$LOCAL_GC_REPO_BASE_DIR\"\n}\n\nfunction configure_repo() {\n  local es_config_name=\"${ES_CONFIG_NAME:-$SCRIPT_ENV}\"\n  local app_config_name=\"${APP_CONFIG_NAME:-$SCRIPT_ENV}\"\n  python -m configuration init \"$SCRIPT_ENV\" \\\n  \t--app-config \"$app_config_name\" --elasticsearch-config \"$es_config_name\"\n  python -m configuration init \"$SCRIPT_ENV\" \\\n  \t--app-config \"$app_config_name\" --elasticsearch-config \"$es_config_name\"\n  python -m configuration check-connections\n}\n\n#####\n## ## MAIN COMMANDS\n#####\n\nfunction run_core_ingest() {\n\n  local job_dir=\"$LOCAL_JOB_DIR\"\n  local job_ts=\"$JOB_TS\"\n\n  local bucket_name=\"$S3_BUCKET_NAME\"\n\n  local es_index_name=\"$ES_INDEX_NAME\"\n  local es_alias_name=\"${ES_ALIAS_NAME:-}\"\n\n  local skip_neo4j_update=\"$SKIP_NEO4J_UPDATE\"\n  local skip_snapshot_backup=\"$SKIP_SNAPSHOT_BACKUP\"\n  local skip_db_backup=\"$SKIP_DB_BACKUP\"\n  local skip_db_update=\"$SKIP_DB_UPDATE\"\n\n  local max_ocr_threads=\"${MAX_OCR_THREADS_PER_FILE:-4}\"\n  local max_parser_threads=\"${MAX_PARSER_THREADS:-16}\"\n\n  local current_snapshot_prefix=\"gamechanger/\"\n  local backup_snapshot_prefix=\"gamechanger/backup/\"\n  local load_archive_base_prefix=\"gamechanger/load-archive/\"\n  local db_backup_base_prefix=\"gamechanger/backup/db/\"\n\n  python -m dataPipelines.gc_ingest pipelines core ingest \\\n    --skip-neo4j-update=\"$skip_neo4j_update\" \\\n    --skip-snapshot-backup=\"$skip_snapshot_backup\" \\\n    --skip-db-backup=\"$skip_db_backup\" \\\n    --skip-db-update=\"$skip_db_update\" \\\n    --current-snapshot-prefix=\"$current_snapshot_prefix\" \\\n    --backup-snapshot-prefix=\"$backup_snapshot_prefix\" \\\n    --db-backup-base-prefix=\"$db_backup_base_prefix\" \\\n    --load-archive-base-prefix=\"$load_archive_base_prefix\" \\\n    --bucket-name=\"$bucket_name\" \\\n    --job-dir=\"$job_dir\" \\\n    --batch-timestamp=\"$job_ts\" \\\n    --index-name=\"$es_index_name\" \\\n    --alias-name=\"$es_alias_name\" \\\n    --max-threads=\"$max_parser_threads\" \\\n    --max-ocr-threads=\"$max_ocr_threads\" \\\n    reparse\n}\n\n#####\n## ## POST COMMANDS\n#####\n\nfunction copy_logs_to_s3() {\n  $AWS_CMD s3 cp \"$LOCAL_JOB_LOG_PATH\" s3://\"$S3_BUCKET_NAME/$S3_JOB_LOG_PREFIX\"\n}\n\n##### ##### #####\n## ## ## ## ## ## ACTUAL EXEC FLOW\n##### ##### #####\n\n# setup\nsetup_venv_and_other_commands\necho_tmp_dir_locaton\nsetup_local_vars_and_dirs\n# LOCAL_JOB_LOG_PATH var is now set\nsetup_local_repo_copy 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\nconfigure_repo 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\n\nSECONDS=0\ncat <<EOF 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\n\n  STARTING PIPELINE RUN\n  $(date \"+DATE: %Y-%m-%d TIME: %H:%M:%S\")\n\nEOF\n\n# main\nrun_core_ingest 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\n\n\ncat <<EOF 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\n\n  SUCCESSFULLY FINISHED PIPELINE RUN\n  $(date \"+DATE: %Y-%m-%d TIME: %H:%M:%S\")\n\nEOF\n\n# how long?\nduration=$SECONDS\necho -e \"\\n $(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed.\" 2>&1 | tee -a \"$LOCAL_JOB_LOG_PATH\"\n\n# flush logs\ncopy_logs_to_s3"
      }, {
        "name" : "stageOnRecordError",
        "value" : "STOP_PIPELINE"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Main Script",
        "xPos" : 385,
        "yPos" : 124,
        "stageType" : "EXECUTOR"
      },
      "inputLanes" : [ "DevDataGenerator_01OutputLane15960123060590" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "Discard_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Discard",
        "xPos" : 645,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "ManualGCCoreReparse4a41817d-5a9f-46a4-9298-6bd4bd98e253",
      "title" : "[Manual] GC Core Re-Parse",
      "description" : "",
      "created" : 1613765265435,
      "lastModified" : 1613766509168,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "0aac9627-ac79-47bb-a38d-0ac36dadfd80",
      "valid" : true,
      "metadata" : {
        "labels" : [ "gamechanger" ]
      },
      "name" : "ManualGCCoreReparse4a41817d-5a9f-46a4-9298-6bd4bd98e253",
      "sdcVersion" : "3.6.2",
      "sdcId" : "af657778-72ed-11eb-86d2-c3cf1b61b5e3"
    },
    "metadata" : {
      "labels" : [ "gamechanger" ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "statsAggregatorStageInstance",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "stageType" : "TARGET",
        "label" : "Stats Aggregator -Write to Control Hub directly"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 329,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 329,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "testOriginStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "rawData",
        "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
      }, {
        "name" : "stopAfterFirstBatch",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "stageType" : "SOURCE",
        "label" : "Test Origin - Dev Raw Data Source"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
      "eventLanes" : [ ],
      "services" : [ {
        "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
        "serviceVersion" : 1,
        "configuration" : [ {
          "name" : "displayFormats",
          "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
        }, {
          "name" : "dataFormat",
          "value" : "JSON"
        }, {
          "name" : "dataFormatConfig.compression",
          "value" : "NONE"
        }, {
          "name" : "dataFormatConfig.filePatternInArchive",
          "value" : "*"
        }, {
          "name" : "dataFormatConfig.charset",
          "value" : "UTF-8"
        }, {
          "name" : "dataFormatConfig.removeCtrlChars",
          "value" : false
        }, {
          "name" : "dataFormatConfig.textMaxLineLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.useCustomDelimiter",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customDelimiter",
          "value" : "\\r\\n"
        }, {
          "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
          "value" : false
        }, {
          "name" : "dataFormatConfig.jsonContent",
          "value" : "MULTIPLE_OBJECTS"
        }, {
          "name" : "dataFormatConfig.jsonMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.csvFileFormat",
          "value" : "CSV"
        }, {
          "name" : "dataFormatConfig.csvHeader",
          "value" : "NO_HEADER"
        }, {
          "name" : "dataFormatConfig.csvAllowExtraColumns",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvExtraColumnPrefix",
          "value" : "_extra_"
        }, {
          "name" : "dataFormatConfig.csvMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.csvCustomDelimiter",
          "value" : "|"
        }, {
          "name" : "dataFormatConfig.csvCustomEscape",
          "value" : "\\"
        }, {
          "name" : "dataFormatConfig.csvCustomQuote",
          "value" : "\""
        }, {
          "name" : "dataFormatConfig.csvEnableComments",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvCommentMarker",
          "value" : "#"
        }, {
          "name" : "dataFormatConfig.csvIgnoreEmptyLines",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvRecordType",
          "value" : "LIST_MAP"
        }, {
          "name" : "dataFormatConfig.csvSkipStartLines",
          "value" : 0
        }, {
          "name" : "dataFormatConfig.parseNull",
          "value" : false
        }, {
          "name" : "dataFormatConfig.nullConstant",
          "value" : "\\\\N"
        }, {
          "name" : "dataFormatConfig.xmlRecordElement",
          "value" : null
        }, {
          "name" : "dataFormatConfig.includeFieldXpathAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xPathNamespaceContext",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.outputFieldAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xmlMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.logMode",
          "value" : "COMMON_LOG_FORMAT"
        }, {
          "name" : "dataFormatConfig.logMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.retainOriginalLine",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customLogFormat",
          "value" : "%h %l %u %t \"%r\" %>s %b"
        }, {
          "name" : "dataFormatConfig.regex",
          "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
        }, {
          "name" : "dataFormatConfig.fieldPathsToGroupName",
          "value" : [ {
            "fieldPath" : "/",
            "group" : 1
          } ]
        }, {
          "name" : "dataFormatConfig.grokPatternDefinition",
          "value" : null
        }, {
          "name" : "dataFormatConfig.grokPattern",
          "value" : "%{COMMONAPACHELOG}"
        }, {
          "name" : "dataFormatConfig.onParseError",
          "value" : "ERROR"
        }, {
          "name" : "dataFormatConfig.maxStackTraceLines",
          "value" : 50
        }, {
          "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
          "value" : false
        }, {
          "name" : "dataFormatConfig.log4jCustomLogFormat",
          "value" : "%r [%t] %-5p %c %x - %m%n"
        }, {
          "name" : "dataFormatConfig.avroSchemaSource",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSchema",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaRegistryUrls",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.schemaLookupMode",
          "value" : "SUBJECT"
        }, {
          "name" : "dataFormatConfig.subject",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaId",
          "value" : null
        }, {
          "name" : "dataFormatConfig.protoDescriptorFile",
          "value" : null
        }, {
          "name" : "dataFormatConfig.messageType",
          "value" : null
        }, {
          "name" : "dataFormatConfig.isDelimited",
          "value" : false
        }, {
          "name" : "dataFormatConfig.binaryMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.datagramMode",
          "value" : "SYSLOG"
        }, {
          "name" : "dataFormatConfig.typesDbPath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.convertTime",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excludeInterval",
          "value" : false
        }, {
          "name" : "dataFormatConfig.authFilePath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesMode",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSize",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMs",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.wholeFileMaxObjectLen",
          "value" : 8192
        }, {
          "name" : "dataFormatConfig.rateLimit",
          "value" : "-1"
        }, {
          "name" : "dataFormatConfig.verifyChecksum",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelHeader",
          "value" : null
        } ]
      } ]
    },
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "issueCount" : 0,
      "stageIssues" : { }
    },
    "previewable" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1596012289163,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1596012289163,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1596012289163,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1596012289163,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1596012289163,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "2fd3c79d-54e3-4a83-acde-167f40986639",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}