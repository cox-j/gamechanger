{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 10,
    "pipelineId" : "scriptretrainingmodel95adf562-fb6e-492d-80f1-fbd7d100ab8c",
    "title" : "script re-training model",
    "description" : "",
    "uuid" : "f232b3da-a84a-4a93-ba63-28dcb1a0b956",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.85}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "LOG"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "INFO"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 0
    }, {
      "name" : "maxRunners",
      "value" : 0
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 30000,
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "JDBCQueryConsumer_01",
      "library" : "streamsets-datacollector-jdbc-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_jdbc_JdbcDSource",
      "stageVersion" : "10",
      "configuration" : [ {
        "name" : "isIncrementalMode",
        "value" : true
      }, {
        "name" : "query",
        "value" : "select id, clone_name from gc_clones where id>${OFFSET} order by id;"
      }, {
        "name" : "initialOffset",
        "value" : "0"
      }, {
        "name" : "offsetColumn",
        "value" : "id"
      }, {
        "name" : "jdbcRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "queryInterval",
        "value" : "${10 * SECONDS}"
      }, {
        "name" : "commonSourceConfigBean.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.maxClobSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.maxBlobSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.numSQLErrorRetries",
        "value" : 0
      }, {
        "name" : "commonSourceConfigBean.newTableQueryInterval",
        "value" : "${10 * SECONDS}"
      }, {
        "name" : "commonSourceConfigBean.noMoreDataEventDelay",
        "value" : 0
      }, {
        "name" : "commonSourceConfigBean.convertTimestampToString",
        "value" : false
      }, {
        "name" : "txnIdColumnName",
        "value" : null
      }, {
        "name" : "txnMaxSize",
        "value" : 10000
      }, {
        "name" : "hikariConfigBean.connectionString",
        "value" : "jdbc:postgresql://PG_HOST/uot"
      }, {
        "name" : "hikariConfigBean.useCredentials",
        "value" : true
      }, {
        "name" : "hikariConfigBean.username",
        "value" : "gc_orchestration_user"
      }, {
        "name" : "hikariConfigBean.password",
        "value" : "PG_PASS"
      }, {
        "name" : "hikariConfigBean.driverProperties",
        "value" : [ { } ]
      }, {
        "name" : "hikariConfigBean.driverClassName",
        "value" : null
      }, {
        "name" : "hikariConfigBean.connectionTestQuery",
        "value" : null
      }, {
        "name" : "hikariConfigBean.maximumPoolSize",
        "value" : 1
      }, {
        "name" : "hikariConfigBean.minIdle",
        "value" : 1
      }, {
        "name" : "hikariConfigBean.connectionTimeout",
        "value" : "${30 * SECONDS}"
      }, {
        "name" : "hikariConfigBean.idleTimeout",
        "value" : "${10 * MINUTES}"
      }, {
        "name" : "hikariConfigBean.maxLifetime",
        "value" : "${30 * MINUTES}"
      }, {
        "name" : "hikariConfigBean.autoCommit",
        "value" : false
      }, {
        "name" : "hikariConfigBean.readOnly",
        "value" : true
      }, {
        "name" : "hikariConfigBean.initialQuery",
        "value" : null
      }, {
        "name" : "hikariConfigBean.transactionIsolation",
        "value" : "DEFAULT"
      }, {
        "name" : "createJDBCNsHeaders",
        "value" : true
      }, {
        "name" : "jdbcNsHeaderPrefix",
        "value" : "jdbc."
      }, {
        "name" : "disableValidation",
        "value" : false
      }, {
        "name" : "unknownTypeAction",
        "value" : "STOP_PIPELINE"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "JDBC Query Consumer 1",
        "xPos" : 409,
        "yPos" : 122,
        "stageType" : "SOURCE"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "JDBCQueryConsumer_01OutputLane16040872214210" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Shell_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_executor_shell_ShellDExecutor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.environmentVariables",
        "value" : [ {
          "key" : "SCRIPT_ENV",
          "value" : "prod"
        }, {
          "key" : "PROJECT",
          "value" : "record:value('/clone_name')"
        }, {
          "key" : "MODEL_VERSION",
          "value" : "v3"
        } ]
      }, {
        "name" : "config.timeout",
        "value" : "1000"
      }, {
        "name" : "config.script",
        "value" : "#!/usr/bin/env bash\n\n#####\n## ## SETUP TMP DIR\n#####\nfunction setup_tmp_dir() {\n  if [[ $SCRIPT_ENV=\"prod\" ]]; then\n    LOCAL_TMP_DIR=$(mktemp -d)\n  else\n    LOCAL_TMP_DIR=$(mktemp -d)\n  fi\n}\nsetup_tmp_dir # CALLING RIGHT AWAY (to avoid issues with unbound var later)\n\nfunction echo_tmp_dir_locaton() {\n  echo \"TEMP DIR IS AT $LOCAL_TMP_DIR\"\n}\n\nfunction remove_tmp_dir() {\n  if [[ -d \"$LOCAL_TMP_DIR\" ]]; then\n    rm -r \"$LOCAL_TMP_DIR\"\n  fi\n}\n\n#####\n## ## REGISTER CLEANUP HOOKS\n#####\n\nfunction cleanup_hooks() {\n  remove_tmp_dir\n  # echo_tmp_dir_locaton\n}\n\nfunction kinit_command() {\n  if [ \"$SCRIPT_ENV\" = \"prod\" ]; then\n    kinit -k -t /etc/security/keytabs/streamsets.keytab ${KRB_NAME}\n  fi\n}\n\n#####\n## ## SETUP LOCAL WORK DIRECTORIES\n#####\n\nfunction setup_local_vars_and_dirs() {\n\n  if [[ \"$SCRIPT_ENV\" == \"dev\" ]]; then\n    LOCAL_GC_REPO_BASE_DIR=\"/tmp/test/repo\"\n    #LOCAL_GC_REPO_BASE_DIR=\"$LOCAL_TMP_DIR/app-repo\"\n  else\n    LOCAL_GC_REPO_BASE_DIR=\"$LOCAL_TMP_DIR/app-repo\"\n\techo $LOCAL_GC_REPO_BASE_DIR\n  fi\n\n  LOCAL_GC_REPO_TGZ_PATH=\"$LOCAL_GC_REPO_BASE_DIR/repo.tgz\"\n  LOCAL_CORPUS_DIR_PATH=\"$LOCAL_TMP_DIR/corpus\"\n  LOCAL_BASE_MODEL_DIR_PATH=\"$LOCAL_TMP_DIR/models\"\n\n  mkdir -p \"$LOCAL_GC_REPO_BASE_DIR\"\n  mkdir -p \"$LOCAL_CORPUS_DIR_PATH\"\n  mkdir -p \"$LOCAL_BASE_MODEL_DIR_PATH\"\n  \n}\n\n#####\n## ## SETUP COMMANDS & DIRS\n#####\n\n\nfunction setup_aws_and_python_exec_commands() {\n\n  case \"$SCRIPT_ENV\" in\n  test|prod)\n    export AWS_DEFAULT_REGION=\"us-gov-west-1\"\n    PYTHON_CMD=\"/opt/gc-venv/bin/python\"\n    AWS_CMD=\"aws\"\n    ;;\n  dev)\n    export AWS_DEFAULT_REGION=\"us-east-1\"\n    PYTHON_CMD=\"/home/sdc/app-venv/bin/python\"\n    AWS_CMD=\"aws\"\n    ;;\n  *)\n    echo >&2 \"Must set SCRIPT_ENV = (prod|dev|test)\"\n    exit 2\n    ;;\n  esac\n\n}\n\nfunction setup_local_repo_copy() {\n\n  if [[ \"$SCRIPT_ENV\" == \"dev\" ]]; then\n    if [[ $(ls -A \"$LOCAL_GC_REPO_BASE_DIR\") ]]; then\n      echo \"LOCAL REPO dir should be mounted at: $LOCAL_GC_REPO_BASE_DIR\"\n      return 0\n    else\n      echo &>2 \"LOCAL REPO dir appears empty: $LOCAL_GC_REPO_BASE_DIR\"\n      $AWS_CMD s3 cp \"s3://$S3_GC_REPO_TGZ_PATH\" \"$LOCAL_GC_REPO_TGZ_PATH\"\n      tar -xzf \"$LOCAL_GC_REPO_TGZ_PATH\" -C \"$LOCAL_GC_REPO_BASE_DIR\"\t  \n      return 0\n    fi\n  fi\n  if [[ \"$SCRIPT_ENV\" == \"prod\" ]]; then \n    if [[ $(ls -A \"$LOCAL_GC_REPO_BASE_DIR\") ]]; then  \n      echo \"LOCAL REPO dir should be mounted at: $LOCAL_GC_REPO_BASE_DIR\"\n      return 0       \n\telse\n      echo &>2 \"LOCAL REPO dir appears empty: $LOCAL_GC_REPO_BASE_DIR\"\n      $AWS_CMD s3 cp \"s3://$S3_GC_REPO_TGZ_PATH\" \"$LOCAL_GC_REPO_TGZ_PATH\"\n      tar -xzf \"$LOCAL_GC_REPO_TGZ_PATH\" -C \"$LOCAL_GC_REPO_BASE_DIR\"\t  \n      return 0\n    fi\n  fi\n}\n\nfunction change_into_local_repo_dir() {\n  echo \"CHANGING DIRECTORIES\"\n  echo $LOCAL_GC_REPO_BASE_DIR\n  cd \"$LOCAL_GC_REPO_BASE_DIR/gamechanger\"\n  echo $(ls /run  -ltr)\n  echo $(pwd)  \n}\n\n#####\n## ## Get and process new docs\n#####\n\nfunction copy_to_debug() {\n  mkdir /home/sdc/debug\n  cp -r \"$LOCAL_PDF_DIR_PATH\"/* /home/sdc/debug/\n}\n\nfunction run_model_trainer() {\n  echo \"RUNNING MODEL_TRAINER\"\n  \"$PYTHON_CMD\" -m gamechangerml.scripts.run_train_models --modeldest \"$LOCAL_BASE_MODEL_DIR_PATH\" --corpus \"$LOCAL_CORPUS_DIR_PATH\"   \n}\n\n#####\n## ## S3 ENV Vars\n#####\n\nfunction setup_s3_vars_and_dirs() {\n  local S3_GAMECHANGER_PROD_PATH=\"advana-data-zone/gamechanger\"\n  local S3_GAMECHANGER_TEST_PATH=\"advana-data-zone/gamechanger\"\n\n  # data pipeline base/prod/test paths\n  local S3_DATA_PIPELINE_PROD_BASE_PATH=\"$S3_GAMECHANGER_PROD_PATH/data-pipelines\"\n  local S3_DATA_PIPELINE_TEST_BASE_PATH=\"$S3_GAMECHANGER_TEST_PATH/data-pipelines\"\n  local S3_DATA_PIPELINE_PROD_PATH=\"$S3_DATA_PIPELINE_PROD_BASE_PATH\"\n  local S3_DATA_PIPELINE_TEST_PATH=\"$S3_DATA_PIPELINE_TEST_BASE_PATH\"\n\n  # orchestration prod/test\n  local S3_DATA_PIPELINE_PROD_ORCHESTRATION_PATH=\"$S3_DATA_PIPELINE_PROD_PATH/orchestration\"\n  local S3_DATA_PIPELINE_TEST_ORCHESTRATION_PATH=\"$S3_DATA_PIPELINE_TEST_PATH/orchestration\"\n\n  # prod/test repo paths\n  local S3_GC_PROD_REPO_TGZ_PATH=\"$S3_DATA_PIPELINE_PROD_ORCHESTRATION_PATH/repo/gamechanger-repo.tgz\"\n  local S3_GC_TEST_REPO_TGZ_PATH=\"$S3_DATA_PIPELINE_TEST_ORCHESTRATION_PATH/repo/gamechanger-repo.tgz\"\n\n  # pdf/json  prod/test\n  local S3_GC_PROD_PDF_PATH=\"$S3_GAMECHANGER_PROD_PATH/pdf_model\"\n  local S3_GC_PROD_JSON_PATH=\"$S3_GAMECHANGER_PROD_PATH/json_model\"\n  local S3_GC_TEST_PDF_PATH=\"$S3_GAMECHANGER_TEST_PATH/test/pdf_model\"\n  local S3_GC_TEST_JSON_PATH=\"$S3_GAMECHANGER_TEST_PATH/test/json_model\"\n\n  case \"$SCRIPT_ENV\" in\n  test)\n    S3_GAMECHANGER_PATH=\"$S3_GAMECHANGER_TEST_PATH\"\n    S3_DATA_PIPELINE_PATH=\"$S3_DATA_PIPELINE_TEST_PATH\"\n    S3_PIPELINE_ORCHESTRATION_PATH=\"$S3_DATA_PIPELINE_TEST_ORCHESTRATION_PATH\"\n    S3_GC_REPO_TGZ_PATH=\"$S3_GC_TEST_REPO_TGZ_PATH\"\n    S3_GC_PDF_PATH=\"$S3_GC_TEST_PDF_PATH\"\n    S3_GC_JSON_PATH=\"$S3_GC_TEST_JSON_PATH\"\n    ;;\n  prod|dev)\n    S3_GAMECHANGER_PATH=\"$S3_GAMECHANGER_PROD_PATH\"\n    S3_DATA_PIPELINE_PATH=\"$S3_DATA_PIPELINE_PROD_PATH\"\n    S3_PIPELINE_ORCHESTRATION_PATH=\"$S3_DATA_PIPELINE_PROD_ORCHESTRATION_PATH\"\n    S3_GC_REPO_TGZ_PATH=\"$S3_GC_PROD_REPO_TGZ_PATH\"\n    S3_GC_PDF_PATH=\"$S3_GC_PROD_PDF_PATH\"\n    S3_GC_JSON_PATH=\"$S3_GC_PROD_JSON_PATH\"\n    ;;\n  esac\n\n  # trained model paths\n  S3_MODEL_BASE_PATH=\"$S3_GAMECHANGER_PATH/projects/\"\n\n\n}\n\n#####\n## ## S3 Fetch/Update Functions\n#####\n\n\nfunction download_corpus_from_s3() {\n  number_of_files=$($AWS_CMD s3 ls s3://advana-data-zone/bronze/gamechanger/projects/$PROJECT/json | wc -l)\n  if [[ $number_of_files -eq 0 ]]; then\n    echo \"no files in directory.\"\n\texit 1\n  else\n    $AWS_CMD s3 cp --recursive \"s3://advana-data-zone/bronze/gamechanger/projects/$PROJECT/json\" \"$LOCAL_CORPUS_DIR_PATH\" --include \"*.json\"\n  fi\n}\n\nfunction sync_model_to_s3() {\n  MODEL_PATH=$(find \"$LOCAL_BASE_MODEL_DIR_PATH/\"  -mindepth 1 -maxdepth 1 -type d)\n  MODEL_NAME=$(basename $MODEL_PATH)\n  $AWS_CMD s3 rm --recursive \"s3://advana-data-zone/bronze/gamechanger/projects/$PROJECT/models/$MODEL_VERSION/$MODEL_NAME\"    \n  $AWS_CMD s3 cp --recursive \"$LOCAL_BASE_MODEL_DIR_PATH/$MODEL_NAME\" \"s3://advana-data-zone/bronze/gamechanger/projects/$PROJECT/models/$MODEL_VERSION/$MODEL_NAME\"\n}\n\n##### ##### #####\n## ## ## ## ## ## ACTUAL EXEC FLOW\n##### ##### #####\n\n# pre-setup\n\nkinit_command\nsetup_aws_and_python_exec_commands\necho_tmp_dir_locaton\nsetup_local_vars_and_dirs\nsetup_s3_vars_and_dirs\n\n# setup repo\nsetup_local_repo_copy\nchange_into_local_repo_dir\n\n# run trainer\ndownload_corpus_from_s3\nrun_model_trainer\n\n# update final s3 locations\nsync_model_to_s3"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Shell 1",
        "xPos" : 727,
        "yPos" : 121,
        "stageType" : "EXECUTOR"
      },
      "inputLanes" : [ "JDBCQueryConsumer_01OutputLane16040872214210" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "Discard_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Discard",
        "xPos" : 934,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "scriptretrainingmodel95adf562-fb6e-492d-80f1-fbd7d100ab8c",
      "title" : "script re-training model",
      "description" : "",
      "created" : 1601931386077,
      "lastModified" : 1604609081537,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "f232b3da-a84a-4a93-ba63-28dcb1a0b956",
      "valid" : true,
      "metadata" : {
        "labels" : [ ]
      },
      "name" : "scriptretrainingmodel95adf562-fb6e-492d-80f1-fbd7d100ab8c",
      "sdcVersion" : "3.6.1",
      "sdcId" : "c8525647-d8de-11ea-9930-a52ec8fb549e"
    },
    "metadata" : {
      "labels" : [ ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "statsAggregatorStageInstance",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "stageType" : "TARGET",
        "label" : "Stats Aggregator -Write to Control Hub directly"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 782,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 782,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "testOriginStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "rawData",
        "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
      }, {
        "name" : "stopAfterFirstBatch",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "stageType" : "SOURCE",
        "label" : "Test Origin - Dev Raw Data Source"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
      "eventLanes" : [ ],
      "services" : [ {
        "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
        "serviceVersion" : 1,
        "configuration" : [ {
          "name" : "displayFormats",
          "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
        }, {
          "name" : "dataFormat",
          "value" : "JSON"
        }, {
          "name" : "dataFormatConfig.compression",
          "value" : "NONE"
        }, {
          "name" : "dataFormatConfig.filePatternInArchive",
          "value" : "*"
        }, {
          "name" : "dataFormatConfig.charset",
          "value" : "UTF-8"
        }, {
          "name" : "dataFormatConfig.removeCtrlChars",
          "value" : false
        }, {
          "name" : "dataFormatConfig.textMaxLineLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.useCustomDelimiter",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customDelimiter",
          "value" : "\\r\\n"
        }, {
          "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
          "value" : false
        }, {
          "name" : "dataFormatConfig.jsonContent",
          "value" : "MULTIPLE_OBJECTS"
        }, {
          "name" : "dataFormatConfig.jsonMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.csvFileFormat",
          "value" : "CSV"
        }, {
          "name" : "dataFormatConfig.csvHeader",
          "value" : "NO_HEADER"
        }, {
          "name" : "dataFormatConfig.csvAllowExtraColumns",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvExtraColumnPrefix",
          "value" : "_extra_"
        }, {
          "name" : "dataFormatConfig.csvMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.csvCustomDelimiter",
          "value" : "|"
        }, {
          "name" : "dataFormatConfig.csvCustomEscape",
          "value" : "\\"
        }, {
          "name" : "dataFormatConfig.csvCustomQuote",
          "value" : "\""
        }, {
          "name" : "dataFormatConfig.csvEnableComments",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvCommentMarker",
          "value" : "#"
        }, {
          "name" : "dataFormatConfig.csvIgnoreEmptyLines",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvRecordType",
          "value" : "LIST_MAP"
        }, {
          "name" : "dataFormatConfig.csvSkipStartLines",
          "value" : 0
        }, {
          "name" : "dataFormatConfig.parseNull",
          "value" : false
        }, {
          "name" : "dataFormatConfig.nullConstant",
          "value" : "\\\\N"
        }, {
          "name" : "dataFormatConfig.xmlRecordElement",
          "value" : null
        }, {
          "name" : "dataFormatConfig.includeFieldXpathAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xPathNamespaceContext",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.outputFieldAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xmlMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.logMode",
          "value" : "COMMON_LOG_FORMAT"
        }, {
          "name" : "dataFormatConfig.logMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.retainOriginalLine",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customLogFormat",
          "value" : "%h %l %u %t \"%r\" %>s %b"
        }, {
          "name" : "dataFormatConfig.regex",
          "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
        }, {
          "name" : "dataFormatConfig.fieldPathsToGroupName",
          "value" : [ {
            "fieldPath" : "/",
            "group" : 1
          } ]
        }, {
          "name" : "dataFormatConfig.grokPatternDefinition",
          "value" : null
        }, {
          "name" : "dataFormatConfig.grokPattern",
          "value" : "%{COMMONAPACHELOG}"
        }, {
          "name" : "dataFormatConfig.onParseError",
          "value" : "ERROR"
        }, {
          "name" : "dataFormatConfig.maxStackTraceLines",
          "value" : 50
        }, {
          "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
          "value" : false
        }, {
          "name" : "dataFormatConfig.log4jCustomLogFormat",
          "value" : "%r [%t] %-5p %c %x - %m%n"
        }, {
          "name" : "dataFormatConfig.avroSchemaSource",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSchema",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaRegistryUrls",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.schemaLookupMode",
          "value" : "SUBJECT"
        }, {
          "name" : "dataFormatConfig.subject",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaId",
          "value" : null
        }, {
          "name" : "dataFormatConfig.protoDescriptorFile",
          "value" : null
        }, {
          "name" : "dataFormatConfig.messageType",
          "value" : null
        }, {
          "name" : "dataFormatConfig.isDelimited",
          "value" : false
        }, {
          "name" : "dataFormatConfig.binaryMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.datagramMode",
          "value" : "SYSLOG"
        }, {
          "name" : "dataFormatConfig.typesDbPath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.convertTime",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excludeInterval",
          "value" : false
        }, {
          "name" : "dataFormatConfig.authFilePath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesMode",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSize",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMs",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.wholeFileMaxObjectLen",
          "value" : 8192
        }, {
          "name" : "dataFormatConfig.rateLimit",
          "value" : "-1"
        }, {
          "name" : "dataFormatConfig.verifyChecksum",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelHeader",
          "value" : null
        } ]
      } ]
    },
    "valid" : true,
    "issues" : {
      "issueCount" : 0,
      "pipelineIssues" : [ ],
      "stageIssues" : { }
    },
    "previewable" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1601931386090,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1601931386090,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1601931386090,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1601931386090,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1601931386090,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "371f8a25-06ae-4585-b6d7-4484789c0d33",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}